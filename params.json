{"name":"Estrela","tagline":"Lua web framework for nginx","body":"estrela\r\n=======\r\n\r\nLua framework for nginx (in early stage of development)\r\n\r\n### In a nutshell\r\n\r\n**bootstrap.lua**\r\n```lua\r\nlocal PP = require('estrela.io.pprint').print\r\n\r\nreturn require('estrela.web').App {\r\n    ['$'] = function(app, req, resp)\r\n        app:defer(function()\r\n            print 'Hello from defer!'\r\n        end)\r\n\r\n        local S = app.session:start()\r\n\r\n        local cnt = tonumber(S.cnt) or 0\r\n        ngx.say('Hello world ', cnt, ' times')\r\n        S.cnt = cnt + 1\r\n\r\n        app.session:stop()\r\n\r\n        return app:forward('/boo')\r\n    end,\r\n\r\n    [{account = '/:name$', profile = '/profile/:name$'}] = function(app)\r\n        local url = app.router:urlFor(app.route.name, app.route.params)\r\n        print('Hello from ', app.req.method, ' ', url)\r\n    end,\r\n\r\n    ['/boo'] = {\r\n        GET = function(app, req)\r\n            print 'def GET'\r\n            PP(req.GET)\r\n            PP(req.COOKIE)\r\n        end,\r\n\r\n        POST = function(app, req)\r\n            print 'def POST'\r\n            PP(req.POST)\r\n            PP(req.FILES)\r\n        end,\r\n\r\n        [{'HEAD', 'OPTIONS'}] = function()\r\n            ngx.status = 403\r\n            print 'Go home!'\r\n            return ngx.exit(0)\r\n        end,\r\n    },\r\n\r\n    ['/external'] = 'ourcoolsite.routes', -- performs require('ourcoolsite.routes')\r\n\r\n    ['/fail$'] = function()\r\n        -- this function is not defined => throw a HTTP error #500\r\n        -- error will be handled in route 500 below\r\n        fooBar()\r\n    end,\r\n\r\n    [404] = function(app)\r\n        print 'Route is not found'\r\n        --return app:defaultErrorPage()\r\n    end,\r\n\r\n    [500] = function(app, req)\r\n        print('Ooops in ', req.url, '\\n', SP(app.error))\r\n        --return true\r\n    end,\r\n}\r\n\r\napp.router:mount('/admin', {\r\n    ['/:action/do$'] = function(app)\r\n        if not user_function_for_check_auth() then\r\n            return app:abort(404, 'Use cookie, Luke!')\r\n        end\r\n        print('admin do ', app.route.params.action, '<br/>')\r\n    end,\r\n})\r\n\r\napp.trigger.before_req:add(function(app, req, resp)\r\n    resp.headers.content_type = 'text/plain'\r\n\r\n    app.log.debug('New request ', app.req.url)\r\n\r\n    if req.GET._method then\r\n        req.method = req.GET._method:upper()\r\n    end\r\nend)\r\n\r\napp.trigger.after_req:add(function()\r\n    print 'Goodbye!'\r\nend)\r\n```\r\n\r\n**nginx.conf**\r\n```nginx\r\nhttp {\r\n    lua_package_path '/path/to/lua/?.lua;/path/to/lua/lib/?.lua;;';\r\n\r\n    server {\r\n        location / {\r\n            content_by_lua_file /path/to/lua/index.lua;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**index.lua**\r\n```lua\r\nreturn xpcall(\r\n    function()\r\n        local app = require('bootstrap')\r\n\r\n        local configurator = require('config')\r\n        if configurator and type(configurator) == 'function' then\r\n            configurator(app.config)\r\n        end\r\n\r\n        return app:serve()\r\n    end,\r\n    function(err)\r\n        ngx.log(ngx.ERR, err)\r\n        ngx.status = 500\r\n        ngx.print 'Ooops! Something went wrong'\r\n        return ngx.exit(0)\r\n    end\r\n)\r\n```\r\n\r\n**config.lua**\r\n```lua\r\nreturn function(cfg)\r\n    -- Для вывода подробного описания ошибок (если не объявлен 500 роут)\r\n    cfg.debug = true\r\n\r\n    -- Разрешаем использовать сессии. Без этого app.session использовать нельзя\r\n    cfg.session.active = true\r\n\r\n    -- nginx.conf \"location /estrela {\"\r\n    -- Если не указать, то пути маршрутизации должны быть полными: ['/estrela/$'], ['/estrela/do/:action'], etc.\r\n    cfg.router.pathPrefix = '/estrela'\r\n\r\n    -- Вместо логирования в nginx error_log (стандартное поведение) пишем в отдельный файл\r\n    cfg.error_logger = require('estrela.log.file'):new('/tmp/estrela.error.log')\r\nend\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}